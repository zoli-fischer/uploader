{"version":3,"sources":["webpack://index/webpack/universalModuleDefinition","webpack://index/webpack/bootstrap","webpack://index/./src/index.js","webpack://index/./src/Support.js","webpack://index/./src/Options.js","webpack://index/./src/FileInput.js","webpack://index/./src/Element.js"],"names":["Uploader","Options","Support","FileInput","console","window","Element","Blob","optionsList","dropZone","pasteZone","fileInput","replaceFileInput","paramName","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","forceIframeTransport","redirect","redirectParamName","postMessage","multipart","maxChunkSize","uploadedBytes","recalculateProgress","progressInterval","bitrateInterval","autoUpload","Object","multiple","document","html","template"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,W;AACjB,+BAAuB;AAAA;;AACnB,uBAAe,IAAIC,UAAJ,QAAf,OAAe,CAAf;AACA,uBAAe,IAAIC,UAAnB,OAAe,EAAf;AACA,yBAAiB,IAAIC,YAArB,OAAiB,EAAjB;;AAEAC,oBAAY,KAAZA;AACAA,oBAAY,KAAZA;AACH;;;;iCAEQ;AACL;AACH;;;;;;kBAZgBJ,Q;;;;;;;;;;;;;ACJrB;;;;;;;;;;;;;;IAEqBE,UACjB,mBAAc;AAAA;;AACV;AACA;AACA,qBAAiB,EAAE;AACf;AACA,sIAFe,yCAMZG,iBANY,cAMmBC,kDANtC,QAAiB,CAAjB;;AAQA;AACA;AACA;AACA;AACA;AACA,yBAAqB,CAAC,EAAED,wBAAwBA,OAAhD,UAAsB,CAAtB;AACA,iCAA6B,CAAC,CAACA,OAA/B;;AAEA;AACA,qBAAiBA,gBAAgBE,wBAAwBA,eAAxBA,eAAsDA,eAAvF,QAAiBF,CAAjB;;;kBArBaH,O;;;;;;;;;;;;;;;;;;;ICFAD,UACjB,0BAAqB;AAAA;;AAAA;;AACjB,QAAMO,cAAc,cAAc;AAC9B;AACA;AACAC,kBAH8B;AAI9B;AACA;AACAC,mBAN8B;AAO9B;AACA;AACA;AACA;AACAC,mBAX8B;AAY9B;AACA;AACA;AACA;AACAC,0BAhB8B;AAiB9B;AACA;AACA;AACA;AACAC,mBArB8B;AAsB9B;AACA;AACA;AACAC,2BAzB8B;AA0B9B;AACA;AACAC,+BA5B8B;AA6B9B;AACA;AACA;AACAC,kCAhC8B;AAiC9B;AACA;AACA;AACAC,0CApC8B;AAqC9B;AACA;AACAC,2BAvC8B;AAwC9B;AACA;AACAC,gCA1C8B;AA2C9B;AACAC,8BA5C8B;AA6C9B;AACA;AACAC,kBA/C8B;AAgD9B;AACA;AACAC,2BAlD8B;AAmD9B;AACA;AACAC,qBArD8B;AAsD9B;AACA;AACA;AACAC,mBAzD8B;AA0D9B;AACA;AACA;AACA;AACAC,sBA9D8B;AA+D9B;AACA;AACA;AACA;AACA;AACAC,uBApE8B;AAqE9B;AACA;AACA;AACAC,6BAxE8B;AAyE9B;AACAC,0BA1E8B;AA2E9B;AACAC,yBA5E8B;AA6E9B;AACAC,oBAAY;AA9EkB,KAAd,EAApB,OAAoB,CAApB;AAgFAC,qCAAiC,eAAO;AACpC,qBAAYvB,YAAZ,GAAYA,CAAZ;AADJuB;;;kBAlFa9B,O;;;;;;;;;;;;;;;;;;;;;;;ACArB;;;;;;;;;;;;;;IAEqBE,Y;AACjB,gCAAqB;AAAA;;AACjB,uBAAe,cAAc;AACzB6B,sBAAU;AADe,SAAd,EAAf,OAAe,CAAf;AAGA,oBAAY1B,yBAAZ,gHAAYA,CAAZ;AACA,qBAAa,wBAAb,OAAa,CAAb;AACA2B,kCAA0B,KAA1BA;;AAEA,sBAAc,aAAd;AACH;;;;mCAEiB;AACd,gBAAI,oBAAJ,GAAsB;AAClB;AACH;AACD,kCAAsB,iCAAiC,aAAjC,WAAtB;AACA,mBAAO,aAAP;AACH;;;+BAEM;AACH;AACH;;;;;;kBAtBgB9B,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICFAG,U;;;;;;;+BAEH4B,I,EAAM;AAChB,gBAAMC,WAAWF,uBAAjB,UAAiBA,CAAjB;AACAC,mBAAOA,KAAPA,IAAOA,EAAPA;AACAC;AACA,mBAAOA,iBAAP;AACH;;;;;;kBAPgB7B,O","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"index\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory();\n\telse\n\t\troot[\"index\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Options from \"./Options\";\nimport Support from \"./Support\";\nimport FileInput from \"./FileInput\";\n\nexport default class Uploader {\n    constructor( options ) {\n        this.options = new Options(options);\n        this.support = new Support();\n        this.fileInput = new FileInput();\n\n        console.log(this.options);\n        console.log(this.support);\n    }\n\n    select() {\n        this.fileInput.open();\n    }\n}\n","import Element from \"./Element\";\n\nexport default class Support {\n    constructor() {\n        // Detect file input support, based on\n        // http://viljamis.com/blog/2012/file-upload-support-on-mobile/\n        this.fileInput = !(new RegExp(\n            // Handle devices which give false positives for the feature detection:\n            '(Android (1\\\\.[0156]|2\\\\.[01]))' +\n            '|(Windows Phone (OS 7|8\\\\.0))|(XBLWP)|(ZuneWP)|(WPDesktop)' +\n            '|(w(eb)?OSBrowser)|(webOS)' +\n            '|(Kindle/(1\\\\.0|2\\\\.[05]|3\\\\.0))'\n        ).test(window.navigator.userAgent) || Element.create('<input type=\"file\" />').disabled)\n\n        // The FileReader API is not actually used, but works as feature detection,\n        // as some Safari versions (5?) support XHR file uploads via the FormData API,\n        // but not non-multipart XHR file uploads.\n        // window.XMLHttpRequestUpload is not available on IE10, so we check for\n        // window.ProgressEvent instead to detect XHR2 file upload capability:\n        this.xhrFileUpload = !!(window.ProgressEvent && window.FileReader)\n        this.xhrFormDataFileUpload = !!window.FormData\n\n        // Detect support for Blob slicing (required for chunked uploads):\n        this.blobSlice = window.Blob && (Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice)\n    }\n}","export default class Options {\n    constructor(options) {\n        const optionsList = Object.assign({\n            // The drop target element(s), by the default the complete document.\n            // Set to null to disable drag & drop support:\n            dropZone: document,\n            // The paste target element(s), by the default the complete document.\n            // Set to null to disable paste support:\n            pasteZone: document,\n            // The file input field(s), that are listened to for change events.\n            // If undefined, it is set to the file input fields inside\n            // of the widget element on plugin initialization.\n            // Set to null to disable the change listener.\n            fileInput: undefined,\n            // By default, the file input field is replaced with a clone after\n            // each input field change event. This is required for iframe transport\n            // queues and allows change events to be fired for the same file\n            // selection, but can be disabled by setting the following option to false:\n            replaceFileInput: true,\n            // The parameter name for the file form data (the request argument name).\n            // If undefined or empty, the name property of the file input field is\n            // used, or \"files[]\" if the file input name property is also empty,\n            // can be a string or an array of strings:\n            paramName: undefined,\n            // By default, each file of a selection is uploaded using an individual\n            // request for XHR type uploads. Set to false to upload file\n            // selections in one request each:\n            singleFileUploads: true,\n            // To limit the number of files uploaded with one XHR request,\n            // set the following option to an integer greater than 0:\n            limitMultiFileUploads: undefined,\n            // The following option limits the number of files uploaded with one\n            // XHR request to keep the request size under or equal to the defined\n            // limit in bytes:\n            limitMultiFileUploadSize: undefined,\n            // Multipart file uploads add a number of bytes to each uploaded file,\n            // therefore the following option adds an overhead for each file used\n            // in the limitMultiFileUploadSize configuration:\n            limitMultiFileUploadSizeOverhead: 512,\n            // Set the following option to true to issue all file upload requests\n            // in a sequential order:\n            sequentialUploads: false,\n            // To limit the number of concurrent uploads,\n            // set the following option to an integer greater than 0:\n            limitConcurrentUploads: undefined,\n            // Set the following option to true to force iframe transport uploads:\n            forceIframeTransport: false,\n            // Set the following option to the location of a redirect url on the\n            // origin server, for cross-domain iframe transport uploads:\n            redirect: undefined,\n            // The parameter name for the redirect url, sent as part of the form\n            // data and set to 'redirect' if this option is empty:\n            redirectParamName: undefined,\n            // Set the following option to the location of a postMessage window,\n            // to enable postMessage transport uploads:\n            postMessage: undefined,\n            // By default, XHR file uploads are sent as multipart/form-data.\n            // The iframe transport is always using multipart/form-data.\n            // Set to false to enable non-multipart XHR uploads:\n            multipart: true,\n            // To upload large files in smaller chunks, set the following option\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\n            // or the browser does not support the required Blob API, files will\n            // be uploaded as a whole.\n            maxChunkSize: undefined,\n            // When a non-multipart upload or a chunked multipart upload has been\n            // aborted, this option can be used to resume the upload by setting\n            // it to the size of the already uploaded bytes. This option is most\n            // useful when modifying the options object inside of the \"add\" or\n            // \"send\" callbacks, as the options are cloned for each file upload.\n            uploadedBytes: undefined,\n            // By default, failed (abort or error) file uploads are removed from the\n            // global progress calculation. Set the following option to false to\n            // prevent recalculating the global progress data:\n            recalculateProgress: true,\n            // Interval in milliseconds to calculate and trigger progress events:\n            progressInterval: 100,\n            // Interval in milliseconds to calculate progress bitrate:\n            bitrateInterval: 500,\n            // By default, uploads are started automatically when adding files:\n            autoUpload: true,\n        }, options);\n        Object.keys(optionsList).forEach(key => {\n            this[key] = optionsList[key]\n        });\n    }\n}","import Element from \"./Element\";\n\nexport default class FileInput {\n    constructor(options) {\n        this.options = Object.assign({\n            multiple: true,\n        }, options);\n        this.form = Element.create('<form style=\"position: fixed; left: -10000px; top: -10000px; visibility: hidden;\"><input type=\"file\" /></form>');\n        this.input = this.form.querySelector('input');\n        document.body.appendChild(this.form);\n\n        this.multiple(this.options.multiple);\n    }\n\n    multiple(...args) {\n        if (args.length == 1) {\n            this.options.multiple = args[0];\n        }\n        this.input.multiple = this.options.multiple === true ? this.options.multiple : undefined;\n        return this.options.multiple;\n    }\n\n    open() {\n        this.input.click();\n    }\n}","export default class Element {\n\n    static create(html) {\n        const template = document.createElement('template');\n        html = html.trim();\n        template.innerHTML = html;\n        return template.content.firstChild;\n    }\n\n}"],"sourceRoot":""}